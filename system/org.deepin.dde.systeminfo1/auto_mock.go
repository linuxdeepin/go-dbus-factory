// Code generated by "./generator ./system/org.deepin.dde.systeminfo1"; DO NOT EDIT.

// SPDX-FileCopyrightText: 2018 - 2023 UnionTech Software Technology Co., Ltd.
//
// SPDX-License-Identifier: GPL-3.0-or-later
package systeminfo1

import (
	"fmt"

	"github.com/godbus/dbus/v5"
	"github.com/linuxdeepin/go-lib/dbusutil/proxy"
	"github.com/stretchr/testify/mock"
)

type MockSystemInfo struct {
	MockInterfaceSystemInfo // interface org.deepin.dde.SystemInfo1
	proxy.MockObject
}

type MockInterfaceSystemInfo struct {
	mock.Mock
}

// property DMIInfo (ssssssssssss)

func (v *MockInterfaceSystemInfo) DMIInfo() PropDMIInfo {
	mockArgs := v.Called()

	ret0, ok := mockArgs.Get(0).(*MockPropDMIInfo)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0
}

// property MemorySize t

func (v *MockInterfaceSystemInfo) MemorySize() proxy.PropUint64 {
	mockArgs := v.Called()

	ret0, ok := mockArgs.Get(0).(*proxy.MockPropUint64)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0
}

// property MemorySizeHuman s

func (v *MockInterfaceSystemInfo) MemorySizeHuman() proxy.PropString {
	mockArgs := v.Called()

	ret0, ok := mockArgs.Get(0).(*proxy.MockPropString)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0
}

// property CurrentSpeed t

func (v *MockInterfaceSystemInfo) CurrentSpeed() proxy.PropUint64 {
	mockArgs := v.Called()

	ret0, ok := mockArgs.Get(0).(*proxy.MockPropUint64)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0
}

type MockPropDMIInfo struct {
	mock.Mock
}

func (p MockPropDMIInfo) Get(flags dbus.Flags) (value DMIInfo, err error) {
	args := p.Called(flags)

	var ok bool
	value, ok = args.Get(0).(DMIInfo)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, args.Get(0)))
	}

	err = args.Error(1)

	return
}

func (p MockPropDMIInfo) Set(flags dbus.Flags, value DMIInfo) error {
	args := p.Called(flags, value)

	return args.Error(0)
}

func (p MockPropDMIInfo) ConnectChanged(cb func(hasValue bool, value DMIInfo)) error {
	args := p.Called(cb)

	return args.Error(0)
}
