// Code generated by "./generator ./com.deepin.daemon.imageeffect"; DO NOT EDIT.

package imageeffect

import (
	"fmt"

	"github.com/godbus/dbus"
	"github.com/stretchr/testify/mock"
	"pkg.deepin.io/lib/dbusutil/proxy"
)

type MockImageEffect struct {
	MockInterfaceImageEffect // interface com.deepin.daemon.ImageEffect
	proxy.MockObject
}

type MockInterfaceImageEffect struct {
	mock.Mock
}

// method Delete

func (v *MockInterfaceImageEffect) GoDelete(flags dbus.Flags, ch chan *dbus.Call, effect string, filename string) *dbus.Call {
	mockArgs := v.Called(flags, ch, effect, filename)

	ret, ok := mockArgs.Get(0).(*dbus.Call)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: 0 failed because object wasn't correct type: %v", mockArgs.Get(0)))
	}

	return ret
}

func (v *MockInterfaceImageEffect) Delete(flags dbus.Flags, effect string, filename string) error {
	mockArgs := v.Called(flags, effect, filename)

	return mockArgs.Error(0)
}

// method Get

func (v *MockInterfaceImageEffect) GoGet(flags dbus.Flags, ch chan *dbus.Call, effect string, filename string) *dbus.Call {
	mockArgs := v.Called(flags, ch, effect, filename)

	ret, ok := mockArgs.Get(0).(*dbus.Call)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: 0 failed because object wasn't correct type: %v", mockArgs.Get(0)))
	}

	return ret
}

func (v *MockInterfaceImageEffect) Get(flags dbus.Flags, effect string, filename string) (string, error) {
	mockArgs := v.Called(flags, effect, filename)

	ret0, ok := mockArgs.Get(0).(string)
	if !ok {
		panic(fmt.Sprintf("assert: arguments: %d failed because object wasn't correct type: %v", 0, mockArgs.Get(0)))
	}

	return ret0, mockArgs.Error(1)
}
